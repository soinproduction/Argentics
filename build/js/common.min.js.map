{"version":3,"names":[],"mappings":"","sources":["common.js"],"sourcesContent":["// init sliders\n\n(function () {\n  \"use strict\";\n\n  const breakpoint = window.matchMedia(\"(min-width:1024px)\");\n  let slider;\n\n  const breakpointChecker = function () {\n    if (breakpoint.matches === true) {\n      if (slider !== undefined) slider.destroy(true, true);\n\n      return;\n    } else if (breakpoint.matches === false) {\n      return enableSwiper();\n    }\n  };\n  const enableSwiper = function () {\n    slider = new Swiper(\".index-logo__slider\", {\n      slidesPerView: \"auto\",\n      spaceBetween: 70,\n      loop: true,\n      speed: 8000,\n      autoplay: {\n        delay: 0,\n      },\n    });\n  };\n\n  breakpoint.addListener(breakpointChecker);\n  breakpointChecker();\n})();\n\n(function () {\n  \"use strict\";\n\n  const breakpoint = window.matchMedia(\"(min-width:1024px)\");\n  let slider;\n\n  const breakpointChecker = function () {\n    if (breakpoint.matches === true) {\n      if (slider !== undefined) slider.destroy(true, true);\n\n      return;\n    } else if (breakpoint.matches === false) {\n      return enableSwiper();\n    }\n  };\n  const enableSwiper = function () {\n    slider = new Swiper(\".partners-logo__slider\", {\n      slidesPerView: 4,\n      spaceBetween: 30,\n      loop: true,\n      speed: 8000,\n      autoplay: {\n        delay: 0,\n      },\n\n    });\n  };\n\n  breakpoint.addListener(breakpointChecker);\n  breakpointChecker();\n})();\n\n(function () {\n  // technical slider\n  \"use strict\";\n\n  const breakpoint = window.matchMedia(\"(min-width:1024px)\");\n  let slider;\n\n  const breakpointChecker = function () {\n    if (breakpoint.matches === true) {\n      if (slider !== undefined) slider.destroy(true, true);\n\n      return;\n    } else if (breakpoint.matches === false) {\n      return enableSwiper();\n    }\n  };\n  const enableSwiper = function () {\n    slider = new Swiper(\".technical__slider\", {\n      slidesPerView: \"auto\",\n      spaceBetween: 0,\n      centeredSlides: true,\n      loop: true,\n      speed: 8000,\n      autoplay: {\n        delay: 0,\n      },\n    });\n  };\n\n  breakpoint.addListener(breakpointChecker);\n  breakpointChecker();\n})();\n// init sliders\n\n// accordion\n\n// const getAccordions = function(className = \".accordion\") {\n//   return document.querySelectorAll(className);\n// }\n\n// const accordions = getAccordions();\n// let openedAccordion = null;\n\n// const closeAccordion = function (accordion) {\n//   accordion.style.maxHeight = 0;\n// };\n\n// const openAccordion = function (accordion) {\n//   accordion.style.maxHeight = accordion.scrollHeight + \"px\";\n// };\n\n// const toggleAccordionButton = function (button, className = \"active\") {\n//   button.classList.toggle(className);\n// };\n\n// const checkIsAccordionOpen = function(accordion) {\n//   return accordion.style.maxHeight && accordion.style.maxHeight !== \"0px\";\n// }\n\n// const accordionClickHandler = function () {\n//   toggleAccordionButton(this);\n\n//   const accordionContent = this.nextElementSibling;\n//   const isAccordionOpen = checkIsAccordionOpen(accordionContent);\n\n//   if (isAccordionOpen) {\n//     closeAccordion(accordionContent);\n//     openedAccordion = null;\n//   } else {\n//     if (openedAccordion != null) {\n//       closeAccordion(openedAccordion);\n//       const accordionButton = openedAccordion.previousElementSibling\n//       toggleAccordionButton(accordionButton);\n//     }\n//     openAccordion(accordionContent);\n//     openedAccordion = accordionContent;\n//   }\n// }\n\n// const activateAccordion = function(accordions, handler) {\n//   for (const accordion of accordions) {\n//     accordion.addEventListener('click', handler)\n//   }\n// }\n// activateAccordion(accordions,accordionClickHandler);\n\n// acoordion\nconst galleryItems = document.querySelectorAll(\".gallery-list\");\nfor (const galleryItem of galleryItems) {\n  lightGallery(galleryItem, {\n    download: false,\n  });\n}\n\nlet header = document.querySelector(\"header\");\nconst headerHeight = header.offsetHeight;\nconst body = document.body;\n\nwindow.addEventListener(\"scroll\", () => {\n  let scrollTop = window.scrollY;\n  if (scrollTop >= 1) {\n    header.classList.add(\"fixed\");\n  } else if (scrollTop <= 0) {\n    header.classList.remove(\"fixed\");\n  }\n});\n\nlet burgerBtns = [...document.querySelectorAll(\".burger-button\")];\nlet mobileMenu = document.querySelector(\".header__mobile\");\nfor (const burgerBtn of burgerBtns) {\n  burgerBtn.addEventListener(\"click\", function () {\n    body.classList.toggle(\"active\");\n  });\n}\n\nlightGallery(document.getElementById(\"portfolioGallery\"), {});\n\nlet moreBtn = document.querySelector(\".veiw-more\");\nlet moreLists = [...document.querySelectorAll(\".portfolio-gallery__list\")];\nlet secondClick = false;\nif (moreBtn) {\n  moreBtn.addEventListener(\"click\", function (e) {\n    e.preventDefault();\n    if (secondClick) {\n      moreBtn.innerHTML = \"More Works\";\n      for (const moreList of moreLists) {\n        moreList.style.maxHeight = null;\n      }\n      secondClick = false;\n    } else {\n      moreBtn.innerHTML = \"roll up\";\n      for (const moreList of moreLists) {\n        moreList.style.maxHeight = moreList.scrollHeight + \"px\";\n      }\n      secondClick = true;\n    }\n  });\n}\n\nconst overlay = document.querySelector(\".overlay\");\nconst overlayHide = document.querySelectorAll(\"[data-close]\");\n\nfor (const btn of overlayHide) {\n  btn.onclick = function () {\n    overlay.classList.remove(\"active\");\n  };\n}\n\n// закрытие по клику вне окна\nif (overlay) {\n  overlay.addEventListener(\"click\", function (e) {\n    e.stopPropagation();\n    let curentTargetWrapper = document.querySelector(\".modal-wrapper\");\n    if (event.target === curentTargetWrapper) {\n      overlay.classList.remove(\"active\");\n    }\n  });\n}\n// закрытие по Escape\ndocument.addEventListener(\"keydown\", function (e) {\n  if (e.keyCode == 27) {\n    overlay.classList.remove(\"active\");\n  }\n});\n\n// демо для показа.\n// для показа модалки после успешной отправки формы, нужно добавить класс active к блоку overlay\n\nconst overlayOpen = document.querySelector(\"[data-open]\");\n\noverlayOpen.onclick = showOverlay;\nfunction showOverlay() {\n  overlay.classList.add(\"active\");\n}\n\nlet accButton = document.querySelectorAll(\".accordion\");\nlet c;\nfor (c = 0; c < accButton.length; c++) {\n  accButton[c].addEventListener(\"click\", function (e) {\n    e.preventDefault();\n    this.classList.toggle(\"active\");\n    let panel = this.nextElementSibling;\n    if (panel.style.maxHeight) {\n      panel.style.maxHeight = null;\n      panel.classList.remove(\"active\");\n    } else {\n      panel.style.maxHeight = panel.scrollHeight + \"px\";\n      panel.classList.add(\"active\");\n    }\n  });\n}\n\n\nconst getAccordions = function(dataName = \"[data-id]\") {\n  return document.querySelectorAll(dataName);\n}\n\nconst accordions = getAccordions();\nlet openedAccordion = null;\n\nconst closeAccordion = function (accordion) {\n  accordion.style.maxHeight = 0;\n};\n\nconst openAccordion = function (accordion) {\n  accordion.style.maxHeight = accordion.scrollHeight + \"px\";\n};\n\nconst toggleAccordionButton = function (button, className = \"active\") {\n  button.classList.toggle(className);\n};\n\nconst checkIsAccordionOpen = function(accordion) {\n  return accordion.style.maxHeight && accordion.style.maxHeight !== \"0px\";\n}\n\nconst accordionClickHandler = function () {\n\n  let curentDataNumber = this.dataset.id\n\n  toggleAccordionButton(this);\n\n  const accordionContent = document.querySelector(`[data-content=\"${curentDataNumber}\"]`);\n  const isAccordionOpen = checkIsAccordionOpen(accordionContent);\n\n  if (isAccordionOpen) {\n    closeAccordion(accordionContent);\n    openedAccordion = null;\n  } else {\n    if (openedAccordion != null) {\n      closeAccordion(openedAccordion);\n      const accordionButton = document.querySelector(`[data-id=\"${openedAccordion.dataset.content}\"]`)\n      toggleAccordionButton(accordionButton);\n    }\n    openAccordion(accordionContent);\n    openedAccordion = accordionContent;\n  }\n}\n\nconst activateAccordion = function(accordions, handler) {\n  for (const accordion of accordions) {\n    accordion.addEventListener('click', handler)\n  }\n}\nactivateAccordion(accordions,accordionClickHandler);\n"],"file":"common.min.js"}